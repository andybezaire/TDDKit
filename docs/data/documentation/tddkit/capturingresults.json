{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Test setup and teardown sometimes can be much more involved than the actual action under test."},{"type":"text","text":" "},{"type":"text","text":"This can mean that your test is more boilerplate than interesting code."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can especially happen when:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"trying to catch errors"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"determining if an "},{"type":"codeVoice","code":"@Published"},{"type":"text","text":" publisher is publishing on the main thread."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"recording values that an "},{"type":"codeVoice","code":"@Published"},{"type":"text","text":" publisher is publishing."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"recording values based on an "},{"type":"codeVoice","code":"@Published"},{"type":"text","text":" publisher."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"These helpers will help to remove the boilerplate and keep your tests tight and focused."}]},{"anchor":"Capture-Error","level":3,"type":"heading","text":"Capture Error"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureError(from:_:file:line:)-1ufmh"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureError(from:_:file:line:)-2tp43"},{"type":"text","text":" (synchronous)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureError(from:_:file:line:)-3rvhj"},{"type":"text","text":" (result completion)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"do"},{"type":"text","text":"-"},{"type":"codeVoice","code":"try"},{"type":"text","text":"-"},{"type":"codeVoice","code":"catch"},{"type":"text","text":" dance with optional captured errors can add a lot of boilerplate to your tests."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This helps by turning the error capture into a single line. A non-optional error is returned"},{"type":"text","text":" "},{"type":"text","text":"or a test failure happens if an error is not thrown."}]},{"type":"codeListing","syntax":"swift","code":["func test_failingGetUsername_createPoem_fails() async throws {","    let error = XCTAnyError()","    let (sut, _) = makeSUT(getUsernameResult: .failure(error))","    ","    let capturedError = await XCTCaptureError(from: try await sut.createPoem())","    ","    XCTAssertCastEqual(capturedError, error)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The equivalent test without helpers:"}]},{"type":"codeListing","syntax":"swift","code":["func test_failingGetUsername_createPoem_fails() async throws {","    let error = XCTAnyError()","    let (sut, _) = makeSUT(getUsernameResult: .failure(error))","    var capturedError: Error?","","    do {","        try await sut.createPoem()","    } catch {","        capturedError = error","    }","","    XCTAssertCastEqual(capturedError, error)","}"]},{"anchor":"Capture-is-Main-Thread","level":3,"type":"heading","text":"Capture is Main Thread"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureIsMainThread(for:droppingFirst:when:)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Subscribing to a Publisher and managing the "},{"type":"codeVoice","code":"AnyCancellable"},{"type":"text","text":" in a test leads to a lot of typing,"},{"type":"text","text":" "},{"type":"text","text":"and can distract from the main focus of the test."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function helps to make your code more clear. Put the actions which will cause the publishes"},{"type":"text","text":" "},{"type":"text","text":"in the block and "},{"type":"codeVoice","code":"XCTCaptureIsMainThread"},{"type":"text","text":" will return the results."}]},{"type":"codeListing","syntax":"swift","code":["func test_refreshTitle_publishesOnMainThread() async throws {","    let (sut, _) = makeSUT()","","    let capturedIsMainThread = await XCTCaptureIsMainThread(for: sut.$title) {","        await sut.refreshTitle()","    }","","    XCTAssertCountEqual(capturedIsMainThread, [true])","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The equivalent test without helpers:"}]},{"type":"codeListing","syntax":"swift","code":["func test_refreshTitle_publishesOnMainThread() async throws {","    let (sut, _) = makeSUT()","    var capturedIsMainThread: [Bool] = []","    let publishing = sut.$title","        .dropFirst(1)","        .sink { _ in capturedIsMainThread.append(Thread.isMainThread) }","","    await sut.refreshTitle()","","    publishing.cancel()","    XCTAssertCountEqual(capturedIsMainThread, [true])","}"]},{"anchor":"Capture-Output","level":3,"type":"heading","text":"Capture Output"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureOutput(for:droppingFirst:when:)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Subscribing to a Publisher and managing the "},{"type":"codeVoice","code":"AnyCancellable"},{"type":"text","text":" in a test leads to a lot of typing,"},{"type":"text","text":" "},{"type":"text","text":"and can distract from the main focus of the test."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function helps to make your code more clear. Put the actions which will cause the publishes"},{"type":"text","text":" "},{"type":"text","text":"in the block and "},{"type":"codeVoice","code":"XCTCaptureOutput"},{"type":"text","text":" will return the results."}]},{"type":"codeListing","syntax":"swift","code":["func test_refreshTitle_setsIsLoading() async throws {","    let (sut, _) = makeSUT()","","    let capturedOutput = await XCTCaptureOutput(for: sut.$isLoading) {","        await sut.refreshTitle()","    }","","    XCTAssertCountEqual(capturedOutput, [true, false])","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The equivalent test without helpers:"}]},{"type":"codeListing","syntax":"swift","code":["func test_refreshTitle_publishesOnMainThread() async throws {","    let (sut, _) = makeSUT()","    var capturedOutput: [Output] = []","    let publishing = sut.$isLoading","        .dropFirst(1)","        .sink { capturedOutput.append($0) }","","    await sut.refreshTitle()","","    publishing.cancel()","    XCTAssertCountEqual(capturedIsMainThread, [true])","}"]},{"anchor":"Capture-Output-Of","level":3,"type":"heading","text":"Capture Output Of"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureOutput(of:for:droppingFirst:when:)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Subscribing to a Publisher and managing the "},{"type":"codeVoice","code":"AnyCancellable"},{"type":"text","text":" in a test leads to a lot of typing,"},{"type":"text","text":" "},{"type":"text","text":"and can distract from the main focus of the test. When sampling a var that depends on the output,"},{"type":"text","text":" "},{"type":"text","text":"adding an additional sample is even more boilerplate."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function helps to make your code more clear. Provide a closure to compute the result and"},{"type":"text","text":" "},{"type":"text","text":"put the actions which will cause the publishes in the block and "},{"type":"codeVoice","code":"XCTCaptureOutput"},{"type":"text","text":" will return the results."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Usage:"}]},{"type":"codeListing","syntax":"swift","code":["func test_refreshTitle_setsLoadingText() async throws {","    let (sut, _) = makeSUT()","","    let capturedOutput = await XCTCaptureOutput(of: { sut.loadingText }, for: sut.$isLoading) {","        await sut.refreshTitle()","    }","","    XCTAssertCountEqual(capturedOutput, [\"Loading...\", \"Finished\"])","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The equivalent test without helpers:"}]},{"type":"codeListing","syntax":"swift","code":["func test_refreshTitle_publishesOnMainThread() async throws {","    let (sut, _) = makeSUT()","    var capturedOutput: [Output] = []","    let publishing = sut.$isLoading","        .dropFirst(2)","        .sink { _ in capturedOutput.append(sut.loadingText) }","","    await sut.refreshTitle()","","    capturedOutput.append(sut.loadingText)","    publishing.cancel()","    XCTAssertCountEqual(capturedIsMainThread, [true])","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/tddkit\/capturingresults"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/TDDKit\/documentation\/TDDKit\/CapturingResults","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Capturing errors and output values."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Capturing Results","role":"article","modules":[{"name":"TDDKit"}]},"hierarchy":{"paths":[["doc:\/\/TDDKit\/documentation\/TDDKit"]]},"seeAlsoSections":[{"title":"Capturing Results","identifiers":["doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureError(from:_:file:line:)-1ufmh","doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureError(from:_:file:line:)-2tp43","doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureError(from:_:file:line:)-3rvhj","doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureIsMainThread(for:droppingFirst:when:)","doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureOutput(for:droppingFirst:when:)","doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureOutput(of:for:droppingFirst:when:)"],"generated":true}],"references":{"doc://TDDKit/documentation/TDDKit/XCTest/XCTestCase/XCTCaptureError(from:_:file:line:)-2tp43":{"role":"symbol","title":"XCTCaptureError(from:_:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTCaptureError"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", () -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Capture the error from a throwing function call."}],"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureError(from:_:file:line:)-2tp43","kind":"symbol","type":"topic","url":"\/documentation\/tddkit\/xctest\/xctestcase\/xctcaptureerror(from:_:file:line:)-2tp43"},"doc://TDDKit/documentation/TDDKit":{"role":"collection","title":"TDDKit","abstract":[{"type":"text","text":"You are now leveled up in your test driven development experience in "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Swift"}]},{"type":"text","text":". 🚀"}],"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit","kind":"symbol","type":"topic","url":"\/documentation\/tddkit"},"doc://TDDKit/documentation/TDDKit/XCTest/XCTestCase/XCTCaptureOutput(for:droppingFirst:when:)":{"role":"symbol","title":"XCTCaptureOutput(for:droppingFirst:when:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTCaptureOutput"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Publisher"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Publisher"},{"kind":"text","text":", "},{"kind":"externalParam","text":"droppingFirst"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"when"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Capture the output of an "},{"type":"codeVoice","code":"@Published"},{"type":"text","text":" publisher."}],"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureOutput(for:droppingFirst:when:)","kind":"symbol","type":"topic","url":"\/documentation\/tddkit\/xctest\/xctestcase\/xctcaptureoutput(for:droppingfirst:when:)"},"doc://TDDKit/documentation/TDDKit/XCTest/XCTestCase/XCTCaptureError(from:_:file:line:)-1ufmh":{"role":"symbol","title":"XCTCaptureError(from:_:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTCaptureError"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", () -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Capture the error from an asyncronous throwing function call."}],"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureError(from:_:file:line:)-1ufmh","kind":"symbol","type":"topic","url":"\/documentation\/tddkit\/xctest\/xctestcase\/xctcaptureerror(from:_:file:line:)-1ufmh"},"doc://TDDKit/documentation/TDDKit/XCTest/XCTestCase/XCTCaptureError(from:_:file:line:)-3rvhj":{"role":"symbol","title":"XCTCaptureError(from:_:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTCaptureError"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Failure"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", () -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Capture the error from function that completes with a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":"."}],"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureError(from:_:file:line:)-3rvhj","kind":"symbol","type":"topic","url":"\/documentation\/tddkit\/xctest\/xctestcase\/xctcaptureerror(from:_:file:line:)-3rvhj"},"doc://TDDKit/documentation/TDDKit/XCTest/XCTestCase/XCTCaptureIsMainThread(for:droppingFirst:when:)":{"role":"symbol","title":"XCTCaptureIsMainThread(for:droppingFirst:when:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTCaptureIsMainThread"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Publisher"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Publisher"},{"kind":"text","text":", "},{"kind":"externalParam","text":"droppingFirst"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"when"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Capture did an "},{"type":"codeVoice","code":"@Published"},{"type":"text","text":" publisher publish on the main thread."}],"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureIsMainThread(for:droppingFirst:when:)","kind":"symbol","type":"topic","url":"\/documentation\/tddkit\/xctest\/xctestcase\/xctcaptureismainthread(for:droppingfirst:when:)"},"doc://TDDKit/documentation/TDDKit/XCTest/XCTestCase/XCTCaptureOutput(of:for:droppingFirst:when:)":{"role":"symbol","title":"XCTCaptureOutput(of:for:droppingFirst:when:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTCaptureOutput"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Publisher"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Publisher"},{"kind":"text","text":", "},{"kind":"externalParam","text":"droppingFirst"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"when"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Capture the output of a closure when an "},{"type":"codeVoice","code":"@Published"},{"type":"text","text":" publisher publishes."}],"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTCaptureOutput(of:for:droppingFirst:when:)","kind":"symbol","type":"topic","url":"\/documentation\/tddkit\/xctest\/xctestcase\/xctcaptureoutput(of:for:droppingfirst:when:)"}}}