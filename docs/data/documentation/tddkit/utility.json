{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Custom-Debug-String-Convertible","level":3,"type":"heading","text":"Custom Debug String Convertible"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTCustomDebugStringConvertible"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sometimes helper classes created in a test like "},{"type":"codeVoice","code":"Spy"},{"type":"text","text":"s and their "},{"type":"codeVoice","code":"enum Message"},{"type":"text","text":" values"},{"type":"text","text":" "},{"type":"text","text":"are very long when printed during a test failure. This can make it hard to see what the"},{"type":"text","text":" "},{"type":"text","text":"class or enum case was."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This protocol has a default conformance that can help by printing the class name or enum case only."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, the default error output for a memory leak using"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTAssertWillDeallocate(instance:_:file:line:)"},{"type":"text","text":" would be:"}]},{"type":"codeListing","syntax":"swift","code":["func test_selfReferencing_example() throws {","    let sut = Instance()","    sut.reference = sut","","    XCTExpectFailure()","    XCTAssertWillDeallocate(instance: sut)","\/\/ Expected failure: XCTAssertWillDeallocate failed: should have been deallocated \"TDDKitTests.XCTCustomStringConvertibleTests.(unknown context at $101e284bc).Spy\"","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"But if you conform the instance to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTCustomDebugStringConvertible"},{"type":"text","text":" and the error output will be nicer:"}]},{"type":"codeListing","syntax":"swift","code":["extension Spy: XCTCustomDebugStringConvertible { }","","func test_selfReferencing_example() throws {","    let sut = Instance()","    sut.reference = sut","","    XCTExpectFailure()","    XCTAssertWillDeallocate(instance: sut)","\/\/ Expected failure: XCTAssertWillDeallocate failed: should have been deallocated \"Spy\"","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Also enum output can be extremely bad:"}]},{"type":"codeListing","syntax":"swift","code":["func test_createPoem_callsServices() async throws {","    let (sut, spy) = makeSUT()","","    _ = try await sut.createPoem()","","    XCTExpectFailure {","        XCTAssertEqual(spy.messages, [.getAge, .getUsername])","\/\/ Expected failure: XCTAssertEqual failed: (\"[TDDKitTests.XCTAssertContainsEqualTests.(unknown context at $101f271c8).Spy.Message.getUsername, TDDKitTests.XCTAssertContainsEqualTests.(unknown context at $101f271c8).Spy.Message.getAge]\") is not equal to (\"[TDDKitTests.XCTAssertContainsEqualTests.(unknown context at $101f271c8).Spy.Message.getAge, TDDKitTests.XCTAssertContainsEqualTests.(unknown context at $101f271c8).Spy.Message.getUsername]\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"But if "},{"type":"codeVoice","code":"Spy.Messages"},{"type":"text","text":" conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTCustomDebugStringConvertible"},{"type":"text","text":", then there will be a much nicer output:"}]},{"type":"codeListing","syntax":"swift","code":["func test_createPoem_callsServices() async throws {","    let (sut, spy) = makeSUT()","","    _ = try await sut.createPoem()","","    XCTExpectFailure {","        XCTAssertEqual(spy.messages, [.getAge, .getUsername])","\/\/ Expected failure: XCTAssertEqual failed: (\"[.getUsername, .getAge]\") is not equal to (\"[.getAge, .getUsername]\")","    }","}"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Does not handle nested enums."},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/andybezaire\/TDDKit\/issues"},{"type":"text","text":" if needed."}]}],"type":"aside","name":"Note"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Uses the "},{"type":"codeVoice","code":"@_silgen_name"},{"type":"text","text":" property wrapper."}]}],"type":"aside","name":"Note"},{"anchor":"Index-Array-Subscript","level":3,"type":"heading","text":"Index Array Subscript"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/Swift\/Collection\/subscript(xctIndex:_:_:)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Accessing an array with an index that is out of bounds will cause a runtime crash in swift."},{"type":"text","text":" "},{"type":"text","text":"If this happens in a test, the default Xcode settings will pause execution and open the debugger."},{"type":"text","text":" "},{"type":"text","text":"Also the error message is not very clear."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This array subscript helps by successfully failing the test and showing a nice error message at the point of access."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Usage:"}]},{"type":"codeListing","syntax":"swift","code":["func test_doLogin_callsServices() async throws {","    let (sut, spy) = makeSUT()","","    sut.doLogin()","","    XCTAssertEqual(spy.messages.count, 1)","    XCTAssertEqual(spy.messages[xctIndex: 0], .userLogin)","}"]},{"anchor":"XCTAnyError","level":3,"type":"heading","text":"XCTAnyError"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTAnyError"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":" "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" can be used to help test errors thrown by dependencies."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Usage:"}]},{"type":"codeListing","syntax":"swift","code":["func test_failingGetUsername_createPoem_fails() async throws {","    let error = XCTAnyError()","    let (sut, _) = makeSUT(getUsernameResult: .failure(error))","    ","    let capturedError = await XCTCaptureError(from: try await sut.createPoem())","    ","    XCTAssertCastEqual(capturedError, error)","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/tddkit\/utility"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/TDDKit\/documentation\/TDDKit\/Utility","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Additional test helpers."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Utility","role":"article","modules":[{"name":"TDDKit"}]},"hierarchy":{"paths":[["doc:\/\/TDDKit\/documentation\/TDDKit"]]},"seeAlsoSections":[{"title":"Utility","identifiers":["doc:\/\/TDDKit\/documentation\/TDDKit\/XCTCustomDebugStringConvertible","doc:\/\/TDDKit\/documentation\/TDDKit\/Swift\/Collection\/subscript(xctIndex:_:_:)","doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTAnyError"],"generated":true}],"references":{"doc://TDDKit/documentation/TDDKit":{"role":"collection","title":"TDDKit","abstract":[{"type":"text","text":"You are now leveled up in your test driven development experience in "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Swift"}]},{"type":"text","text":". ðŸš€"}],"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit","kind":"symbol","type":"topic","url":"\/documentation\/tddkit"},"doc://TDDKit/documentation/TDDKit/XCTCustomDebugStringConvertible":{"role":"symbol","title":"XCTCustomDebugStringConvertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTCustomDebugStringConvertible"}],"abstract":[{"type":"text","text":"Nicely debug print just the class name or enum case"}],"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTCustomDebugStringConvertible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"XCTCustomDebugStringConvertible"}],"url":"\/documentation\/tddkit\/xctcustomdebugstringconvertible"},"doc://TDDKit/documentation/TDDKit/XCTest/XCTestCase/XCTAssertWillDeallocate(instance:_:file:line:)":{"role":"symbol","title":"XCTAssertWillDeallocate(instance:_:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTAssertWillDeallocate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"instance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyObject","preciseIdentifier":"s:s9AnyObjecta"},{"kind":"text","text":", () -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Fail a test if the instance was not deallocted."}],"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTAssertWillDeallocate(instance:_:file:line:)","kind":"symbol","type":"topic","url":"\/documentation\/tddkit\/xctest\/xctestcase\/xctassertwilldeallocate(instance:_:file:line:)"},"doc://TDDKit/documentation/TDDKit/Swift/Collection/subscript(xctIndex:_:_:)":{"role":"symbol","title":"subscript(xctIndex:_:_:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"externalParam","text":"xctIndex"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Access a "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":"â€™s "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" at a given index and "},{"type":"codeVoice","code":"XCTFail"},{"type":"text","text":" if out-of-bounds."}],"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/Swift\/Collection\/subscript(xctIndex:_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/tddkit\/swift\/collection\/subscript(xctindex:_:_:)"},"doc://TDDKit/documentation/TDDKit/XCTest/XCTestCase/XCTAnyError":{"role":"symbol","title":"XCTestCase.XCTAnyError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTAnyError"}],"abstract":[{"type":"text","text":"An equatable identifiable error."}],"identifier":"doc:\/\/TDDKit\/documentation\/TDDKit\/XCTest\/XCTestCase\/XCTAnyError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"XCTAnyError"}],"url":"\/documentation\/tddkit\/xctest\/xctestcase\/xctanyerror"},"https://github.com/andybezaire/TDDKit/issues":{"title":"Feature request","titleInlineContent":[{"type":"text","text":"Feature request"}],"type":"link","identifier":"https:\/\/github.com\/andybezaire\/TDDKit\/issues","url":"https:\/\/github.com\/andybezaire\/TDDKit\/issues"}}}